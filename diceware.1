.\" Man page generated from reStructuredText.
.
.TH DICEWARE 1 "April 2019" "diceware 0.9.7.dev0" "User Commands"
.SH NAME
diceware \- create passphrases
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.sp
\fBdiceware\fP [\fIOPTION\fP]... [\fIFILE\fP]
.SH DESCRIPTION
.sp
\fBdiceware\fP generates passphrases by concatenating words randomly picked from
wordlists. It also supports real dice for passphrase generation.
.sp
It is based on the proposals of Arnold G. Reinhold on \fI\%http://diceware.com\fP\&.
.SH OPTIONS
.sp
\fBpositional arguments\fP:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B FILE
optional input wordlist. \fB\(aq\-\(aq\fP will read from stdin. Should contain one
word per line.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fBoptional arguments\fP:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B \fB\-h\fP, \fB\-\-help\fP
show help message and exit
.TP
.B \fB\-n\fP \fINUM\fP, \fB\-\-num\fP \fINUM\fP
number of words to concatenate. Default 6
.TP
.B \fB\-c\fP, \fB\-\-caps\fP
Capitalize words. This is the default.
.TP
.B \fB\-\-no\-caps\fP
Turn off capitalization.
.TP
.B \fB\-s\fP \fINUM\fP, \fB\-\-specials\fP \fINUM\fP
Insert NUM special chars into generated word.
.TP
.B \fB\-d\fP \fIDELIMITER\fP, \fB\-\-delimiter\fP \fIDELIMITER\fP
Separate words by DELIMITER. Empty string by default.
.TP
.B \fB\-r\fP \fISOURCE\fP, \fB\-\-randomsource\fP \fISOURCE\fP
Get randomness from this source. Possible values:
\fBrealdice\fP, \fBsystem\fP\&. Default: \fBsystem\fP
.TP
.B \fB\-w\fP \fINAME\fP, \fB\-\-wordlist\fP \fINAME\fP
Use words from this wordlist. Possible values: \fIen\fP, \fIen_eff\fP, \fIen_orig\fP,
\fIen_securedrop\fP\&.  Wordlists are stored in the folder displayed below.
Default: \fBen_eff\fP
.TP
.B \fB\-v\fP, \fB\-\-verbose\fP
Be verbose. Use several times for increased verbosity.
.TP
.B \fB\-\-version\fP
output version information and exit.
.UNINDENT
.UNINDENT
.UNINDENT
.sp
\fBArguments related to\fP \fIrealdice\fP \fBrandomsource\fP:
.INDENT 0.0
.INDENT 3.5
.INDENT 0.0
.TP
.B \fB\-\-dice\-sides\fP \fIN\fP
Number of sides of dice. Default: 6
.UNINDENT
.UNINDENT
.UNINDENT
.SH FILES
.INDENT 0.0
.TP
.B \fI~/.diceware.ini\fP
Your personal diceware configuration file.
.UNINDENT
.sp
\fBdiceware\fP also comes with a set of wordlists. The path where these lists are
stored is showed with \fB\-\-help\fP\&.
.SH EXAMPLES
.INDENT 0.0
.TP
.B \fBdiceware\fP
Create a passphrase using defaults. Outputs something like
"\fBWheelDyeHonkCanvasWitsPuck\fP"
.TP
.B \fBdiceware \-d\fP \fI"\-"\fP \fB\-n\fP \fI3\fP
Create a passphrase with three words, separated by dash ("\fI\-\fP"). Results in
something like "\fBWheel\-Dye\-Honk\fP"
.TP
.B \fBdiceware \-\-no\-caps\fP
Create a passphrase without capital words. Creates something like
"\fBwheel\-dye\-honk\fP".
.TP
.B \fBdiceware \-r\fP \fIrealdice\fP
Use real dice to create a passphrase. The programm will tell you what to do
(roll dice and tell what numbers appear) and in the end present a
passphrase.
.TP
.B \fBdiceware \-r\fP \fIrealdice\fP \fB\-\-dice\-sides\fP \fI20\fP
Use real dice, as shown above, but this time use dice with 20 faces,
instead of standard, 6\-sided dice.
.TP
.B \fBdiceware mywordlist.txt\fP
Create a passphrase with words from file "mywordlist.txt". The file should
contain one word on each line.
.TP
.B \fBdiceware \-w en_orig \-s 2\fP
Create a passphrase with two special chars spread over the generated
passphrase and containing words from wordlist "\fBen_orig\fP". This is one of
the wordlists that come included with \fIdiceware\fP\&. Creates something like:
"\fBRutt[FanScoldLouiseT*nyThrob\fP".
.UNINDENT
.SH COPYRIGHT
.sp
Copyright (C) 2015\-2019 Uli Fouquet and contributors
.sp
This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or (at your option) any later
version.
.sp
This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE.  See the GNU General Public License for more details.
.sp
You should have received a copy of the GNU General Public License along with
this program.  If not, see <\fI\%http://www.gnu.org/licenses/\fP>.
.sp
diceware is a concept invented by Arnold G. Reinhold, Cambridge, Massachusetts
USA.
.sp
The English Diceware Wordlists used with this programme are licensed by Arnold
G. Reinhold (files \fBwordlists/wordlist_en_orig.asc\fP,
\fBwordlists/wordlist_en.txt\fP) under the \fICreative Commons CC\-BY 3.0\fP license
(see \fI\%http://creativecommons.org/licenses/by/3.0/\fP).
.sp
The Securedrop wordlist (file \fBwordlists/wordlist_en_securedrop.asc\fP) by
Heartsucker is licensed under the \fIMIT\fP license (see \fI\%http://mit\-license.org/\fP).
.sp
The EFF wordlist (file \fBwordlsts/wordlist_en_eff.txt\fP) is licensed by the
Electronic Frontier Foundation under the \fICreative Commons CC\-BY 3.0 US\fP
license (see \fI\%https://creativecommons.org/licenses/by/3.0/us/\fP).
.sp
"Diceware" is a trademark of Arnold G Reinhold, used with permission.
.SH AUTHOR
Written by Uli Fouquet and contributors
.\" Generated by docutils manpage writer.
.
